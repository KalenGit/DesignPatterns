/*
 * Factory.h
 *
 *  Created on: 2018年3月13日
 *      Author: haward
        描述:角色，工厂
 */

#ifndef FACTORY_H_
#define FACTORY_H_

#include<string>
#include"Product.h"

class Factory {
public:
	Factory();
	virtual ~Factory();  //虚函数在实现多态时，当用基类操作派生类，在析构时防止只析构基类而不析构派生类的状况发生。
	virtual Product* factoryMethod(std::string args);//非纯虚函数仍然可以有实现，是多态的标志(子类必须需要实现)
};



/**
 *
注意：
（1）纯虚函数没有函数体；
（2）最后面的“=0”并不表示函数返回值为0，它只起形式上的作用，告诉编译系统“这是虚函数”；
（3）这是一个声明语句，最后有分号。
纯虚函数只有函数的名字而不具备函数的功能，不能被调用。
纯虚函数的作用是在基类中为其派生类保留一个函数的名字，以便派生类根据需要对他进行定义。如果在基类中没有保留函数名字，则无法实现多态性。
如果在一个类中声明了纯虚函数，在其派生类中没有对其函数进行定义，则该虚函数在派生类中仍然为纯虚函数。

带纯虚函数的类叫虚基类，这种基类不能直接生成对象，而只有被继承，并重写其虚函数后，才能使用。这样的类也叫抽象类。
虚函数是为了继承接口和默认行为
纯虚函数只是继承接口，行为必须重新定义

 *
 * **/


#endif /* FACTORY_H_ */
